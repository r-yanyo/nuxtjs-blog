{
  "title": "Node.jsの標準モジュール(https)でAPIを叩く(GETのみ)",
  "date": "2018年02月10日",
  "tags": [
    "JavaScript"
  ],
  "bodyContent": "### (結構前にQiitaに上げた記事です。)\n\nNode.jsを始めたばかりでAPIの叩き方が分からなかったのでメモ。\n一般的にはrequestモジュールを使用するようですが、モジュール無しでサクッと書きたいことがあったので。\n\nAPIを叩くテストとして「[RANDOM USER GENERATOR](https://randomuser.me)」を使用。\n（このサービスはアプリケーションのテスト用に、適当なダミーユーザを作成するものらしいです。）\n\n# 基本型\n以下のようにhttps.requestの引数に直接URIを渡すと、自動的にhttpメソッドは'GET'になる。responseデータはres.onイベントで受け取る。最後にreq.end()を呼ばないと動かないので注意。\n\n```js\nconst https = require('https');\nconst req = https.request('URI', (res) => {\n　　　　　　　　res.on('data', (chunk) => {\n\n    ...\n\n    });\n\n    ....\n\n})\nreq.end();\n```\n## 実装例\nURI: https://randomuser.me/api/?inc=gender,name,nat&format=PrettyJSON\n\nhttpメソッド: 'GET'\n\nquery: inc=gender,name,nat&format=PrettyJSON\n\n```js\nconst https = require('https');\n\nconst req = https.request('https://randomuser.me/api/?inc=gender,name,nat&format=PrettyJSON', (res) => {\n    res.on('data', (chunk) => {\n        console.log(`BODY: ${chunk}`);\n    });\n    res.on('end', () => {\n        console.log('No more data in response.');\n    });\n})\n\nreq.on('error', (e) => {\n  console.error(`problem with request: ${e.message}`);\n});\n\nreq.end();\n```\n\n## 結果\nqueryで指定した「gender」、「name」、「nat」プロパティだけを取得出来ている。\n\n```\nBODY: {\n  \"results\": [\n    {\n      \"gender\": \"female\",\n      \"name\": {\n        \"title\": \"miss\",\n        \"first\": \"shivanie\",\n        \"last\": \"van kekem\"\n      },\n      \"nat\": \"NL\"\n    }\n  ],\n  \"info\": {\n    \"seed\": \"cdac8f9044c4fe04\",\n    \"results\": 1,\n    \"page\": 1,\n    \"version\": \"1.1\"\n  }\n}\nNo more data in response.\n```\n# Optionsを使って書く\n先程のようにURIを直接指定するのではなく、optionsに各要素を書くことも出来る。queryはpathに書く。\noptionsの書き方は公式リファレンスに書いてある。(httpモジュールのリファレンスですが、多分httpsでもだいたい同じだと思う。。。）\n\nhttps://nodejs.org/api/http.html#http_http_request_options_callback\n\n```js\nconst https = require('https');\n\nconst options = {\n  protocol: 'PROTOCOL',\n  host: 'HOST',\n  path: 'PATH'+'QUERY',\n  method: 'METHOD',\n　　　　headers: {\n    'Content-Type': 'CONTENT-TYPE'\n  }\n};\n\nconst req = https.request(options, (res) => {\n　　　　　　　　res.on('data', (chunk) => {\n\n    ...\n\n    });\n\n    ....\n\n})\nreq.end();\n```\n\n## 実装例\nURI: https://randomuser.me/api/?inc=gender,name,nat&format=PrettyJSON\n\nhttpメソッド: 'GET'\n\nquery: inc=gender,name,nat&format=PrettyJSON\n\n```js\nconst https = require('https');\n\nconst options = {\n  protocol: 'https:',\n  host: 'www.randomuser.me',\n  path: '/api'+'?inc=gender,name,nat&format=PrettyJSON',\n  method: 'GET',\n};\n\nconst req = https.request(options, (res) => {\n    res.on('data', (chunk) => {\n        console.log(`BODY: ${chunk}`);\n    });\n    res.on('end', () => {\n        console.log('No more data in response.');\n    });\n})\n\nreq.on('error', (e) => {\n  console.error(`problem with request: ${e.message}`);\n});\n\nreq.end();\n```\n## 結果\n\n```\nBODY: {\n  \"results\": [\n    {\n      \"gender\": \"female\",\n      \"name\": {\n        \"title\": \"ms\",\n        \"first\": \"patricia\",\n        \"last\": \"evans\"\n      },\n      \"nat\": \"GB\"\n    }\n  ],\n  \"info\": {\n    \"seed\": \"795d48206f63ba29\",\n    \"results\": 1,\n    \"page\": 1,\n    \"version\": \"1.1\"\n  }\n}\nNo more data in response.\n```",
  "bodyHtml": "<h3>(結構前にQiitaに上げた記事です。)</h3>\n<p>Node.jsを始めたばかりでAPIの叩き方が分からなかったのでメモ。\n一般的にはrequestモジュールを使用するようですが、モジュール無しでサクッと書きたいことがあったので。</p>\n<p>APIを叩くテストとして「<a href=\"https://randomuser.me\">RANDOM USER GENERATOR</a>」を使用。\n（このサービスはアプリケーションのテスト用に、適当なダミーユーザを作成するものらしいです。）</p>\n<h1>基本型</h1>\n<p>以下のようにhttps.requestの引数に直接URIを渡すと、自動的にhttpメソッドは'GET'になる。responseデータはres.onイベントで受け取る。最後にreq.end()を呼ばないと動かないので注意。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">const</span> https = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'https'</span>);\n<span class=\"hljs-keyword\">const</span> req = https.request(<span class=\"hljs-string\">'URI'</span>, (res) =&gt; {\n　　　　　　　　res.on(<span class=\"hljs-string\">'data'</span>, (chunk) =&gt; {\n\n    ...\n\n    });\n\n    ....\n\n})\nreq.end();</code></pre><h2>実装例</h2>\n<p>URI: https://randomuser.me/api/?inc=gender,name,nat&amp;format=PrettyJSON</p>\n<p>httpメソッド: 'GET'</p>\n<p>query: inc=gender,name,nat&amp;format=PrettyJSON</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">const</span> https = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'https'</span>);\n\n<span class=\"hljs-keyword\">const</span> req = https.request(<span class=\"hljs-string\">'https://randomuser.me/api/?inc=gender,name,nat&amp;format=PrettyJSON'</span>, (res) =&gt; {\n    res.on(<span class=\"hljs-string\">'data'</span>, (chunk) =&gt; {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`BODY: <span class=\"hljs-subst\">${chunk}</span>`</span>);\n    });\n    res.on(<span class=\"hljs-string\">'end'</span>, () =&gt; {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'No more data in response.'</span>);\n    });\n})\n\nreq.on(<span class=\"hljs-string\">'error'</span>, (e) =&gt; {\n  <span class=\"hljs-built_in\">console</span>.error(<span class=\"hljs-string\">`problem with request: <span class=\"hljs-subst\">${e.message}</span>`</span>);\n});\n\nreq.end();</code></pre><h2>結果</h2>\n<p>queryで指定した「gender」、「name」、「nat」プロパティだけを取得出来ている。</p>\n<pre><code>BODY: {\n  &quot;results&quot;: [\n    {\n      &quot;gender&quot;: &quot;female&quot;,\n      &quot;name&quot;: {\n        &quot;title&quot;: &quot;miss&quot;,\n        &quot;first&quot;: &quot;shivanie&quot;,\n        &quot;last&quot;: &quot;van kekem&quot;\n      },\n      &quot;nat&quot;: &quot;NL&quot;\n    }\n  ],\n  &quot;info&quot;: {\n    &quot;seed&quot;: &quot;cdac8f9044c4fe04&quot;,\n    &quot;results&quot;: 1,\n    &quot;page&quot;: 1,\n    &quot;version&quot;: &quot;1.1&quot;\n  }\n}\nNo more data in response.\n</code></pre>\n<h1>Optionsを使って書く</h1>\n<p>先程のようにURIを直接指定するのではなく、optionsに各要素を書くことも出来る。queryはpathに書く。\noptionsの書き方は公式リファレンスに書いてある。(httpモジュールのリファレンスですが、多分httpsでもだいたい同じだと思う。。。）</p>\n<p>https://nodejs.org/api/http.html#http_http_request_options_callback</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">const</span> https = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'https'</span>);\n\n<span class=\"hljs-keyword\">const</span> options = {\n  <span class=\"hljs-attr\">protocol</span>: <span class=\"hljs-string\">'PROTOCOL'</span>,\n  <span class=\"hljs-attr\">host</span>: <span class=\"hljs-string\">'HOST'</span>,\n  <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'PATH'</span>+<span class=\"hljs-string\">'QUERY'</span>,\n  <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'METHOD'</span>,\n　　　　<span class=\"hljs-attr\">headers</span>: {\n    <span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'CONTENT-TYPE'</span>\n  }\n};\n\n<span class=\"hljs-keyword\">const</span> req = https.request(options, (res) =&gt; {\n　　　　　　　　res.on(<span class=\"hljs-string\">'data'</span>, (chunk) =&gt; {\n\n    ...\n\n    });\n\n    ....\n\n})\nreq.end();</code></pre><h2>実装例</h2>\n<p>URI: https://randomuser.me/api/?inc=gender,name,nat&amp;format=PrettyJSON</p>\n<p>httpメソッド: 'GET'</p>\n<p>query: inc=gender,name,nat&amp;format=PrettyJSON</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">const</span> https = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'https'</span>);\n\n<span class=\"hljs-keyword\">const</span> options = {\n  <span class=\"hljs-attr\">protocol</span>: <span class=\"hljs-string\">'https:'</span>,\n  <span class=\"hljs-attr\">host</span>: <span class=\"hljs-string\">'www.randomuser.me'</span>,\n  <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/api'</span>+<span class=\"hljs-string\">'?inc=gender,name,nat&amp;format=PrettyJSON'</span>,\n  <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'GET'</span>,\n};\n\n<span class=\"hljs-keyword\">const</span> req = https.request(options, (res) =&gt; {\n    res.on(<span class=\"hljs-string\">'data'</span>, (chunk) =&gt; {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`BODY: <span class=\"hljs-subst\">${chunk}</span>`</span>);\n    });\n    res.on(<span class=\"hljs-string\">'end'</span>, () =&gt; {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'No more data in response.'</span>);\n    });\n})\n\nreq.on(<span class=\"hljs-string\">'error'</span>, (e) =&gt; {\n  <span class=\"hljs-built_in\">console</span>.error(<span class=\"hljs-string\">`problem with request: <span class=\"hljs-subst\">${e.message}</span>`</span>);\n});\n\nreq.end();</code></pre><h2>結果</h2>\n<pre><code>BODY: {\n  &quot;results&quot;: [\n    {\n      &quot;gender&quot;: &quot;female&quot;,\n      &quot;name&quot;: {\n        &quot;title&quot;: &quot;ms&quot;,\n        &quot;first&quot;: &quot;patricia&quot;,\n        &quot;last&quot;: &quot;evans&quot;\n      },\n      &quot;nat&quot;: &quot;GB&quot;\n    }\n  ],\n  &quot;info&quot;: {\n    &quot;seed&quot;: &quot;795d48206f63ba29&quot;,\n    &quot;results&quot;: 1,\n    &quot;page&quot;: 1,\n    &quot;version&quot;: &quot;1.1&quot;\n  }\n}\nNo more data in response.\n</code></pre>\n",
  "preview": "",
  "dir": "content/json",
  "base": "2018-02-10-nodejs-httprequest.json",
  "ext": ".json",
  "sourceBase": "2018-02-10-nodejs-httprequest.md",
  "sourceExt": ".md"
}